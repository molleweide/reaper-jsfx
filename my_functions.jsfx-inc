@init

// check limits:  t < 0 ? t = 0 : t > 127 ? t = 127;
function transpose_up()(
    SINGLE_ROOT_NOTE < 127 ? (
      SINGLE_ROOT_NOTE += 1;
      );
);

function transpose_down()(
    SINGLE_ROOT_NOTE > 0 ? (
      SINGLE_ROOT_NOTE -= 1;
      );
);

function resetAllNotes()(
  // loop through all notes
  loop(127,
    i += 1;
    vel = 80;
    midisend(0,$x80,i+vel*256);
  );
);


// rename function to `qmk_handleOtherKeys()`
function qmh_handleOtherKeys(mode, input)(
    ( mode == MODE_QMK_SINGLE_BASIC || mode == MODE_QMK_FULL_LINEAR || mode == MODE_QMK_SPLIT ) ? (
      input == KC_QMK_TRANSPOSE_RESET_1 ? SINGLE_ROOT_NOTE = 24;
      input == KC_QMK_TRANSPOSE_RESET_2 ? SINGLE_ROOT_NOTE = 36;
      input == KC_QMK_TRANSPOSE_RESET_3 ? SINGLE_ROOT_NOTE = 48;
      input == KC_QMK_TRANSPOSE_RESET_4 ? SINGLE_ROOT_NOTE = 60;
      input == KC_QMK_TRANSPOSE_RESET_5 ? SINGLE_ROOT_NOTE = 72;
      input == KC_QMK_TRANSPOSE_PINKY_UP ? transpose_up();
      input == KC_QMK_TRANSPOSE_PINKY_DOWN ? transpose_down();
    );

    mode == MODE_QMK_SINGLE_BASIC ? (
      input == KC_QMK_TRANSPOSE_THUMBS_UP ? transpose_up();
      input == KC_QMK_TRANSPOSE_THUMBS_DOWN? transpose_down();
    );
    resetAllNotes();
);

function grand_handleOtherKeys(mode, input)(
  mode == MODE_GRAND_PIANO_FULL ? (
      input == KC_GRAND_TRANSPOSE_RESET ? SINGLE_ROOT_NOTE = 24;
      input == KC_GRAND_RESET_ALL_NOTES ? resetAllNotes();
      input == KC_GRAND_TRANSPOSE_UP ? transpose_up();
      input == KC_GRAND_TRANSPOSE_DOWN ? transpose_down();
  );
  resetAllNotes();
);
// RENAME TO NOTE ON / OFF INPUT GATE ??
function filter_check(mode, note) (
    mode == MODE_QMK_SINGLE_BASIC ? (
      retval = (note < QMK_SINGLE_LOW || note > QMK_SINGLE_HIGH)
      && note != QMK_THUMB_INNER_L1 && note != QMK_THUMB_INNER_R1;
    );
    (mode == MODE_QMK_FULL_LINEAR || mode == MODE_QMK_SPLIT_VEL_NOTE || mode == MODE_QMK_SPLIT_MULT_CH) ? (
      retval = note < QMK_FULL_LOW || note > QMK_FULL_HIGH;
    );
    mode == MODE_GRAND_PIANO_FULL ? (
      retval = note < GRAND_PIANO_LOW || note > GRAND_PIANO_HIGH;
    );
    retval;
);

// incoming notes range from 0 - 37
function qmk_mapSplitNotesSingle(note)(
  // TODO
  //
  //  create function numInRange() ???

    // left side //////////////////
    (QMK_ROW_HIGH_L_START <= note && note <= QMK_ROW_HIGH_L_END) ? (
      retval = SINGLE_ROOT_NOTE + note - QMK_NOTE_SHIFT_NORMALIZE - 14;
      /* tmp_note = note - QMK_NOTE_SHIFT_NORMALIZE; */
    );
    (QMK_ROW_MID_L_START <= note && note <= QMK_ROW_MID_L_END) ? (
      retval = SINGLE_ROOT_NOTE + note - QMK_NOTE_SHIFT_NORMALIZE - 9;
    );
    (QMK_ROW_LOW_L_START <= note && note <= QMK_ROW_LOW_L_END) ? (
      retval = SINGLE_ROOT_NOTE + note - QMK_NOTE_SHIFT_NORMALIZE - 4;
    );
    (QMK_ROW_BOTTOM_L_START <= note && note <= QMK_ROW_BOTTOM_L_END) ? (
      retval = SINGLE_ROOT_NOTE + note - QMK_NOTE_SHIFT_NORMALIZE;
    );
    QMK_THUMB_INNER_L1 == note ? (
      retval = SINGLE_ROOT_NOTE + note - QMK_NOTE_SHIFT_NORMALIZE;
    );
    // right side ////////////////
    (QMK_ROW_HIGH_R_START <= note && note <= QMK_ROW_HIGH_R_END) ? (
      retval = SINGLE_ROOT_NOTE + note - QMK_NOTE_SHIFT_NORMALIZE - 19;
    );
    (QMK_ROW_MID_R_START <= note && note <= QMK_ROW_MID_R_END) ? (
      retval = SINGLE_ROOT_NOTE + note - QMK_NOTE_SHIFT_NORMALIZE - 14;
    );
    (QMK_ROW_LOW_R_START <= note && note <= QMK_ROW_LOW_R_END) ? (
      retval = SINGLE_ROOT_NOTE + note - QMK_NOTE_SHIFT_NORMALIZE - 9;
    );
    (QMK_ROW_BOTTOM_R_START <= note && note <= QMK_ROW_BOTTOM_R_END) ? (
      retval = SINGLE_ROOT_NOTE + note - QMK_NOTE_SHIFT_NORMALIZE - 4;
    );
    QMK_THUMB_INNER_R1 == note ? (
      retval = SINGLE_ROOT_NOTE + note - QMK_NOTE_SHIFT_NORMALIZE - 4;
    );

  retval;
);

// QMK OUTPUT NOTE MAPPING
function qmk_computeNoteOut(mode, note)(
    mode == MODE_QMK_SINGLE_BASIC ? (
      retval = SINGLE_ROOT_NOTE;// compute retval with transpose shift
    );
    mode == MODE_QMK_FULL_LINEAR ? (
      // first subtract shift notes and then add ring
      tmp_note = note - QMK_NOTE_SHIFT_NORMALIZE;
      retval = SINGLE_ROOT_NOTE + tmp_note;
    );
    mode == MODE_QMK_SPLIT_VEL_NOTE ? (
      retval = qmk_mapSplitNotesSingle(note);
    );
    mode == MODE_QMK_SPLIT_MULT_CH ? (
      retval = qmk_mapSplitNotesSingle(note); // TODO <<<<<<<<<<<<<
    );
    retval;
);

function qmk_computeVelOut(mode, note)(
  return = mode;
);

function grand_computeNoteOut(mode, note)(
    mode == MODE_GRAND_PIANO_FULL ? (
       retval = SINGLE_ROOT_NOTE + note - GPAND_PIANO_NOTE_SHIFT_NORMALIZE;
    );
    retval;
);

