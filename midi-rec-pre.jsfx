desc: reaper-jsfx midi-rec-pre
author: molleweide
version: 1.0

import ./lib/variables.jsfx-inc
import ./lib/model_keyboard.jsfx-inc
import ./lib/util_keyboard.jsfx-inc
import ./lib/util_keyboard.jsfx-inc
import ./lib/midi_controller.jsfx-inc
import ./midi_devices/midi_device_virtual_keyboard.jsfx-inc
import ./midi_devices/midi_device_ergodox_ez.jsfx-inc
import ./midi_devices/midi_device_piano_grand.jsfx-inc
import ./lib/midi_device_router.jsfx-inc

slider1:24<1,127,1>ROOT
slider2:0<0,2,1{VIRTUAL_KEYBOARD,QMK,PIANO_FULL}>DEVICE
slider3:0<0,9,1{VKB_SINGLE,VKB_LINEAR,VKB_SPLIT_VEL,VKB_SPLIT_CH,QMK_SINGLE,QMK_FULL,QMK_SPLIT,QMK_SPLIT_CH,PIANO_FULL,PIANO_FULL_SPLIT}>MODE

out_pin:none
out_pin:none

@slider
GLOBAL_ROOT_NOTE = slider1; // remove this slider
DEVICE = slider2;
MODE = slider3;

@block
while (
  input = midirecv(offset,msg1,msg2,msg3);
  input ? (
    midi_in_type = msg1&TYPE_MASK;
    midi_in_channel = msg1&CHANNEL_MASK;
    midi_in_note = msg2;
    midi_in_vel = msg3;

    midi_in_type == NOTE_ON && midi_in_vel > 0 ? (
      midi_out_note_on = device_route_midi_events(midi_in_note, 1);
      midi_out_note_on > -1 ? (
        device_has_vel() ? midi_out_vel = midi_in_vel : midi_out_vel = GLOBAL_VEL;
        midi_out_ch = GLOBAL_CH;
        midisend(offset,midi_in_type+midi_out_ch,midi_out_note_on,midi_out_vel);
      );
    ):

    midi_in_type == NOTE_OFF || (midi_in_type == NOTE_ON && midi_in_vel == 0 ) ? (
          midi_out_note_off = device_route_midi_events(midi_in_note, 0);
          midi_out_note_off >= -1 ? (
              device_has_vel() ? midi_out_vel = midi_in_vel : midi_out_vel = GLOBAL_VEL;
              midi_out_ch = GLOBAL_CH;
              midisend(offset,midi_in_type+midi_out_ch,midi_out_note_off,midi_out_vel);
          );
    ):

    PASS_THRU_CC ? (
        midisend(mpos, msg1, msg2, msg3);
    );
  );
  input;
);
