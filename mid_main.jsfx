desc: molleweide custom midi device preprocessor
author: molleweide
version: 1.0

import mid_vars.jsfx-inc
import mid_midi.jsfx-inc

import mid_device_qmk.jsfx-inc
import mid_device_piano.jsfx-inc

import mid_main_funcs.jsfx-inc

/*
   LINKS

   - MIDI SPEC: http://www.petesqbsite.com/sections/express/issue18/midifilespart1.html
   - MIDI TUTORIAL BIG: https://www.admiralbumblebee.com/music/2018/02/08/Write-a-Reaper-MIDI-JSFX-from-scratch.html#for-programmers

   TODO ////////////////////////////////////

    - I need to record more parts and do some mixing.

    - qmk switch mode with outer kes above transpose keys
      only change for device...

    - add qmk_kit_mode >> so that I can begin to do kit programming.

    - add note numbers to piano roll.

    - vim > play/config

    - action > force only one rec armed track at once

    - config file list of midi devices > create custom command > set midi_device for sel tracks.
        1. research > are there any good existing stuff
        2. loop through list and check if exists...

   VIM ////////////////////////////////////

    - learn vimscript
   - make eel syntax into plugin >> publish to github
   - vim indent anything plugin?
   - article on indentation: http://psy.swansea.ac.uk/staff/carter/vim/vim_indent.htm
   - make plugin installable with all of the standard plugin managers

 */

slider1:24<1,127,1>ROOT
slider2:0<0,2,1{QMK,GRAND_PIANO,DRUMKIT}>DEVICE
slider3:0<0,2,1{QMK_SINGLE,QMK_FULL,QMK_SPLIT,GRAND_FULL,QMK_SPLIT_CH}>MODE

out_pin:none
out_pin:none

@slider
SINGLE_ROOT_NOTE = slider1;
MIDI_DEVICE = slider2;
MODE = slider3;

@block
while (
  input = midirecv(offset,msg1,msg2,msg3);
  input ? (
    midi_in_type = msg1&TYPE_MASK;
    midi_in_channel = msg1&CHANNEL_MASK;
    midi_in_note = msg2;
    midi_in_vel = msg3;

    // note on ////////////////////////////////////////////
    midi_in_type == NOTE_ON && midi_in_vel > 0 ? (

      midi_out_note_on = filter_check(MODE, midi_in_note);

      (midi_out_note_on > 0) ? (

        device_has_vel(MIDI_DEVICE) ? midi_out_vel = midi_in_vel : midi_out_vel = GLOBAL_VEL;

        // will this cause problems if I switch ch mid note down?
        // keep track of it first is note off then use prev ch??? hmmm??
        midi_out_ch = GLOBAL_CH;

        midisend(offset,midi_in_type+midi_out_ch,midi_out_note_on,midi_out_vel);

      ):(

        WAS_FILTERED[midi_in_note] = 1;
        handleControlKeys(MIDI_DEVICE, MODE, midi_in_note);

      );
    ):

    // NOTE OFF ////////////////////////////////////////////
    midi_in_type == NOTE_OFF || (midi_in_type == NOTE_ON && midi_in_vel == 0 ) ? (

      WAS_FILTERED[midi_in_note] ? (

        WAS_FILTERED[midi_in_note] = 0;

      ):(

          midi_out_note_off = filter_check(MODE, midi_in_note);

          device_has_vel(MIDI_DEVICE) ? midi_out_vel = midi_in_vel : midi_out_vel = GLOBAL_VEL;

          midi_out_ch = GLOBAL_CH;

          midisend(offset,midi_in_type+midi_in_channel,midi_out_note_off,midi_out_vel);

      );
    ):

    // MIDI CC ////////////////////////////////////////////
    PASS_THRU_CC ? (
        midisend(mpos, msg1, msg2, msg3);
    );
  ); // input
  input;
);
