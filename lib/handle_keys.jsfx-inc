@init

// MIDI KEYS // ::::::::::::::::
//
// return note number if note | zero if not note

function handleMidiKeys(mode, note)
  local(r)
(
  r = 0;

    // VIRTUAL KEYBOARD ///////////////////////////////////////////

    (MODE_VKB_LO <= mode && mode <= MODE_VKB_HI) ? (
        r = keyb_modes(mode, note); // rename to a more serious
    );

    // QMK ////////////////////////////////////////////////////////

    /* (MODE_QMK_LO <= mode && mode <= MODE_QMK_HI) ? ( */
    /*     r = ergodox_ez_modes(mode, note); */
    /* ); */

    mode == MODE_QMK_SINGLE ? (
      qmk_inside_reduced(note) ? r= SINGLE_ROOT_NOTE;
    );

    mode == MODE_QMK_FULL ? (
      qmk_inside_full(note) ? (
        r= SINGLE_ROOT_NOTE + note - QMK_NOTE_SHIFT_NORMALIZE;
      );
    );

    mode == MODE_QMK_SPLIT ? (
      // left side is handled as control key below..
      // feels stupid?
      R = qmk_insideRightSide(note);
      R > -1 ? r= SINGLE_ROOT_NOTE + R;
    );

    mode == MODE_QMK_SPLIT_CH ? (
      R = qmk_insideRightSide(note);
      R > -1 ? r= SINGLE_ROOT_NOTE + R;
    );

    // PIANO ////////////////////////////////////////////////

    mode == MODE_PIANO_FULL ? (
      grand_piano_inside_full(note) ? r = SINGLE_ROOT_NOTE + note - GPAND_PIANO_NOTE_SHIFT_NORMALIZE;
    );

    mode == MODE_PIANO_FULL_SPLIT ? (
      grand_piano_inside_full(note) ? r = SINGLE_ROOT_NOTE + note - GPAND_PIANO_NOTE_SHIFT_NORMALIZE;
    );

    r;
);

// CONTROLLER KEYS // :::::::::::::::::::::::::::::::::::::::::::::

function handleControlKeys(device, mode, input)(
    //device == DEVICE_VIRTUAL ? qmk_handle_control_keys(mode, input);
    device == DEVICE_QMK ? qmk_handle_control_keys(mode, input);
    device == DEVICE_PIANO_FULL ? piano_handle_control_keys(mode, input);
);
